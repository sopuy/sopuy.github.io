[{"categories":["linux"],"content":"概述 使用 totp Time-Based One-Time Password 认证，基于软件 pam_google_authenticator 实现； 为 linux 的 ssh 和 sudo 开启 2fa two-factor authenticator； ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:1:0","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["linux"],"content":"安装软件 bash:~$ yum install -y pam_google_authenticator or bash:~$ sudo apt install -y libpam-google-authenticator ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:2:0","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["linux"],"content":"生成二次验证代码 下方命令会直接在终端生成一个二维码，可以直接使用手机客户端 Google 或者 Microsoft 的 Authenticator 扫码添加； 此命令默认会在用户的宿主目录生成文件 ~/.google_authenticator； 在上述文件内删除 “紧急备用码”，则自动生成的紧急备用码会失效(生产环境建议删除)； bash:~$ google-authenticator -t -f -d -w 3 -e 10 -r 3 -R 30 参数说明： # -t: 使用 TOTP 验证 # -f: 默认将配置保存到 ~/.google_authenticator 文件里面 # -d: 不允许重复使用以前使用的令牌 # -w 3: 使用令牌进行身份验证以进行时钟偏移 # -e 10: 生成 10 个紧急备用代码 # -r 3 -R 30: 限速 - 每 30 秒允许 3 次登录 ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:3:0","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["linux"],"content":"开启 ssh 2fa ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:4:0","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["linux"],"content":"配置 pam.d 配置 pam_google_authenticator 并禁用 common-auth(不禁用会要求先输入 Password，在输入Verification code)： bash:~$ sudo vim /etc/pam.d/sshd # 添加以下行 auth required pam_google_authenticator.so # @include common-auth ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:4:1","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["linux"],"content":"配置 sshd 使用密码登录，只配置ChallengeResponseAuthentication 即可；表示 RFC-4256 键盘交互式身份验证方案的支持； 使用密钥登录，需要额外配置PubkeyAuthentication 和 AuthenticationMethods; 前提是已经配置了UsePAM; 另外，如果需要只针对 root 用户生效，只需将上述 3 个配置项写在对应用户的 Match 中即可； bash:~$ sudo vim /etc/ssh/sshd_config UsePAM yes ChallengeResponseAuthentication yes PubkeyAuthentication yes AuthenticationMethods publickey,keyboard-interactive # 只对 root 用户启用 Match User root ChallengeResponseAuthentication yes PubkeyAuthentication yes AuthenticationMethods publickey,keyboard-interactive ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:4:2","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["linux"],"content":"重启 sshd bash:~$ sudo systemctl restart ssh.service 测试截图： ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:4:3","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["linux"],"content":"开启 sudo 2fa # 配置 sudo 二次验证, 注释 common-auth bash:~$ sudo vim /etc/pam.d/sudo # @include common-auth auth required pam_google_authenticator.so nullok 测试截图： ","date":"2023-09-19","objectID":"/posts/linux-ssh-sudo-2fa/:5:0","tags":["mfa"],"title":"linux ssh+sudo enable 2fa","uri":"/posts/linux-ssh-sudo-2fa/"},{"categories":["Personal"],"content":"Big moment ","date":"2023-09-15","objectID":"/posts/big-moment/:1:0","tags":[],"title":"Big moment","uri":"/posts/big-moment/"},{"categories":["ansible"],"content":"ansible 变量使用手册","date":"2023-04-13","objectID":"/posts/ansible-vars/","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["ansible"],"content":"变量 ansible 可以在以下地方设置变量： ","date":"2023-04-13","objectID":"/posts/ansible-vars/:1:0","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["ansible"],"content":"inventory 变量 直接配置在 inventory 文件中的变量；示例如下： [all] [all:children] prod uat [all:vars] #组变量 ansible_ssh_user=root ansible_ssh_private_key_file=/opt/id_rsa_root svr_root_dir=\"/opt/server/\" [prod] prod-db01 ansible_ssh_host=192.168.1.100 #子组变量 [prod:vars] svr_root_dir=\"/opt/server/prod/\" [uat] #主机变量 uat-db01 ansible_ssh_host=192.168.1.101 svr_root_dir=\"/opt/server/uat/\" ","date":"2023-04-13","objectID":"/posts/ansible-vars/:1:1","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["ansible"],"content":"vars_files 变量 变量设置在单独的文件中，示例如下： # app_version.yml app: miningauth app_local_root: /home/yunwei/data/miningauth app_releases_root: /data1/tomcat/releases/miningauth tomcat_root: /data1/tomcat/auth # playbook.yml - hosts: all gather_facts: False vars_files: - app_version.yml ","date":"2023-04-13","objectID":"/posts/ansible-vars/:1:2","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["ansible"],"content":"playbook 变量 变量设置在剧本文件中，示例如下： # playbook.yml - hosts: all gather_facts: False vars: - project_local_dir: \"/home/yunwei/data/{{app}}\" - project_release_dir: \"/data1/tomcat/releases/{{app}}\" - project_dest_dir: \"/data1/tomcat/{{p_dir}}\" ","date":"2023-04-13","objectID":"/posts/ansible-vars/:1:3","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["ansible"],"content":"命令行变量 执行剧本时，定义 env=prod ansible-playbook playbook.yml -e \"env=prod\" ","date":"2023-04-13","objectID":"/posts/ansible-vars/:1:4","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["ansible"],"content":"主机变量和主机组变量 group_vars 和 host_vars,和 inventory 放在相同目录中; 定义主机和主机组变量的首选做法是与 清单文件或目录 相同的工作目录中，创建 group_vars 和 host_vars 两个目录，这两个目录分别包含用于定义组变量和主机变量的文件。（下方的中括号代表可以省略的内容） 创建 group_vars/group_name[.yml] 的 YAML 文件，设置变量为值：user: student 同样需要在 host_vars/inventory_hostname[.yml] 目录中创建名称与主机匹配的文件来存放主机变量 所以一个项目目录中包含：ansible.cfg、group_vars、host_vars、inventory、playbook.yml 对于不同的ansible命令行，对于这两个folder的查找路径是不一样的。 如果是ansible-playbook命令，他会去当前playbook所在文件的同级目录下去查找这两个文件夹 如果是ansible和ansible-console命令行，则会去当前playbook所在文件统计目录下的inventory文件夹下去查找这两个文件夹。 主机变量 # host_vars/inventory_hostname[.yml] version: 100 minute: 10 hour: 06 主机组变量 # host_vars/groupname[.yml] version: 100 minute: 10 hour: 06 ","date":"2023-04-13","objectID":"/posts/ansible-vars/:1:5","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["ansible"],"content":"变量优先级 可以在以下位置定义变量，按优先级从低到高排列： 在清单中定义的组变量。 在清单或 Playbook 所在目录的 group_vars 子目录中定义的组变量。 在清单中定义的主机变量。 在清单或 Playbook 所在目录的 host_vars 子目录中定义的主机变量。 在运行时发现的主机事实，比如执行剧本时采集到的 facts 。 （vars 和 vars_files）playbook 中的 Play 变量。 任务变量。 在命令行中定义的额外变量。 ","date":"2023-04-13","objectID":"/posts/ansible-vars/:1:6","tags":["ansible"],"title":"ansible vars","uri":"/posts/ansible-vars/"},{"categories":["linux"],"content":"Linux facl 文件访问控制列表使用手册","date":"2023-04-10","objectID":"/posts/linux-facl/","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"facl 文件访问控制列表 File Access ConTrol List ","date":"2023-04-10","objectID":"/posts/linux-facl/:1:0","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"一些说明 默认只对用户做 facl 权限，对组的权限设置，一般是通过用户附属组的方式实现； 查看是否启用了 facl：如果使用命令 ls -l 会发现在9位权限位之后，又增加了一个 + 号，则证明启用了 facl ","date":"2023-04-10","objectID":"/posts/linux-facl/:1:1","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"背景 按照 linux 基本权限机制（u,g,o 权限），一个文件如果想被属主之外的其他用户访问，只能修改文件的 o(ther) 权限来实现（或者将用户加入属组中）。这两种方式都会导致文件权限被授予的过大，数据的安全性大大降低。facl 的出现很好的解决了这个问题。facl (文件访问控制列表)是一种额外的文件赋权机制，它在文件的基本权限u,g,o外，添加了另一层让普通用户能够将文件的控制权限赋予另外的一些用户或者组的机制。 ","date":"2023-04-10","objectID":"/posts/linux-facl/:2:0","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"linux 文件访问权限匹配模型 ","date":"2023-04-10","objectID":"/posts/linux-facl/:3:0","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"基本权限匹配机制 检查进程的发起者和被访问文件的属主是否相同 如果相 同，则使用文件属主的权限访问 如果不同，转到步骤2 检查进程的发起者和被访问文件的属组是否相同 如果相同，则使用文件属组的权限访问 如果不同，转到步骤3 使用other权限 ","date":"2023-04-10","objectID":"/posts/linux-facl/:3:1","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"facl 权限匹配机制 检查进程的发起者和被访问文件的属主是否相同 如果相同，则使用文件属主的权限访问 如果不同，转到步骤2 检查被访问的文件是否有关于进程发起者这个特定用户的facl 如果有，则使用facl中这个特定用户的facl权限访问 如果没有，转到步骤3 检查进程的发起者和被访问文件的属组是否相同 如果相同，则使用文件属组的权限访问 如果不同，转到步骤4 检查被访问的文件是否有关于进程发起者这个特定用户的所属组的facl 如果有，则使用facl中这个特定用户的所属组的facl权限访问 如果没有，转到步骤5 使用other权限 ","date":"2023-04-10","objectID":"/posts/linux-facl/:3:2","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"常用命令 设置命令 setfacl 查看命令 getfacl ","date":"2023-04-10","objectID":"/posts/linux-facl/:4:0","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"getfacl 查看 1.txt 的文件权限： $ getfacl 1.txt # file: 1.txt # owner: ubuntu # group: ubuntu user::rw- group::rw- other::r-- file: 1.txt # 文件名 owner:ubuntu # 文件属主 group:ubuntu # 文件属组 user::rw- # 用户的访问权限（中间字段为用户名，当中间字段为空时，则代表属主；多个用户会存在多行） group::rw- # 组的访问权限（中间字段为组名，当中间字段为空时，则代表属组；多个组会存在多行） other::r-- # 其他的访问权限 ","date":"2023-04-10","objectID":"/posts/linux-facl/:4:1","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["linux"],"content":"setfacl 参数说明 setfacl [-bkndRLPvh] [{-m|-x} acl_spec] [{-M|-X} acl_file] file ... setfacl参数如下: -m 和 -x 最使用 -m ：设置后续的acl参数 -x ：删除后续的acl参数 -b ：删除所有的ACL设定参数 -R ：递归设置acl参数 -d ：设置预设的acl参数(只对目录有效，在该目录新建的文件也会使用此ACL默认值) -k ：删除预设的ACL参数 EXAMPLES: Granting an additional user read access setfacl -m u:lisa:r file Revoking write access from all groups and all named users (using the effective rights mask) setfacl -m m::rx file Removing a named group entry from a file's ACL setfacl -x g:staff file Copying the ACL of one file to another getfacl file1 | setfacl --set-file=- file2 Copying the access ACL into the Default ACL getfacl --access dir | setfacl -d -M- dir 使用实例 文件 /opt/123.txt 的属主是 ubuntu，文件权限为 755；需求：允许属于组 test 的 test 用户可以读写改文件： setfacl -m u:test:rw /opt/123.txt 删除文件 /opt/123.txt 的 facl 权限： setfacl -b /opt/123.txt ","date":"2023-04-10","objectID":"/posts/linux-facl/:4:2","tags":[],"title":"Linux Facl","uri":"/posts/linux-facl/"},{"categories":["notes"],"content":"markdown 基础语法","date":"2023-04-08","objectID":"/posts/markdown-basic/","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"markdown常用语法 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:0","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"数学符号 $\\Delta Delta号$ $ \\pm 加减号$ $ \\mp 减加号$ $ \\neq 不等号$ $ \\geq 大于等于$ $ \\leq 小于等于$ $ \\approx 约等于$ $\\div 除号$ $\\times 乘号$ $\\cdot 点号$ $\\frac{a}{b} 分号$ ${x^2 \\over 1+x} 复杂分式$ $ \\sqrt{2} 根号$ $Z^+ 上标$ $Z_+ 下标$ 整理Markdown 公式编辑常用数学符号 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:1","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"Flowcharts tips: 第一个三引号后要有 mermaid graph LR A[Hard edge] --\u003eB(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:2","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"标题 以符号#标记，一个代表一级标题，共有六级标题 # 这是 H1 ## 这是 H2 ###### 这是 H6 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:3","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"强调 斜体：文字两端使用1对*或-标记起来 粗体：文字两端使用2对*或-标记起来 删除线：使用2对~包裹起来的行，标记为删除线 *我是斜体* **我是粗体** ~~我是删除线~~ ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:4","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"换行 在行尾添加两个空格加回车表示换行 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:5","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"列表 以符号-、+或*标记为无序列表，有序列表则直接在文字前加1. 2. 3.即可 - list1 + list2 * list3 1. list4 2. list5 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:6","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"引用 只需要在文本前加入 \u003e 这种尖括号（大于号）即可，区块引用可以嵌套 \u003e 我是引用 \u003e\u003e 我是引用的引用 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:7","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"链接与图片 链接以符号[]()标识，图片与链接的语法很像，区别为在最前面添加了一个! 链接: [百度](https://www.baidu.com) 图片: ![github图片](https://assets-cdn.github.com/favicon.ico) ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:8","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"代码块 只需要有3对```(数字1左边的按键)把代码块包裹起来就可以了 我是代码块 我是代码块 [^备注]：使用1对`表示行内代码 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:9","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"水平线 使用三个-或*标记为水平线 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:10","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["notes"],"content":"待办事项 使用- [](未完成)- [x](已完成) 未完成待办事项 已完成待办事项 ","date":"2023-04-08","objectID":"/posts/markdown-basic/:1:11","tags":[],"title":"Markdown Basic","uri":"/posts/markdown-basic/"},{"categories":["linux"],"content":"linux date 命令速查手册","date":"2023-04-07","objectID":"/posts/linux-date-basic/","tags":["bash"],"title":"linux date basic","uri":"/posts/linux-date-basic/"},{"categories":["linux"],"content":"背景 最近常用 unixstamp，特做此记录，用于快速查询； 来源自 man date ","date":"2023-04-07","objectID":"/posts/linux-date-basic/:1:0","tags":["bash"],"title":"linux date basic","uri":"/posts/linux-date-basic/"},{"categories":["linux"],"content":"命令格式 date [OPTION]... [+FORMAT] OPTION 常用： -d, --date=STRING display time described by STRING, not 'now' -s, --set=STRING set time described by STRING FORMAT 常用： %F full date; like %+4Y-%m-%d %Y year %m month (01..12) %d day of month (e.g., 01) %H hour (00..23) %M minute (00..59) %S second (00..60) %u day of week (1..7); 1 is Monday ","date":"2023-04-07","objectID":"/posts/linux-date-basic/:2:0","tags":["bash"],"title":"linux date basic","uri":"/posts/linux-date-basic/"},{"categories":["linux"],"content":"常用命令 ","date":"2023-04-07","objectID":"/posts/linux-date-basic/:3:0","tags":["bash"],"title":"linux date basic","uri":"/posts/linux-date-basic/"},{"categories":["linux"],"content":"设置类 # 修改时间 date 040714502023 //将时间改为 2023-04-07 14:50:00 date -s \"14:55:00\" //更改时间 date -s \"2023-04-05 14:22:00\" //更改日期和时间 ","date":"2023-04-07","objectID":"/posts/linux-date-basic/:3:1","tags":["bash"],"title":"linux date basic","uri":"/posts/linux-date-basic/"},{"categories":["linux"],"content":"显示类 # 显示当前时间 date # 获取指定时区的时间 TZ='America/Los_Angeles' date # 显示上个月的第一天 date -d \"1 month ago\" +%Y%m01 # %u day of week (1..7); 1 is Monday date +%u # 显示当前时区 +hhmm numeric time zone (e.g., -0400) date +%z # alphabetic time zone abbreviation (e.g., EDT) date +%Z # seconds since 1970-01-01 00:00:00 UTC date +%s # 获取指定时间的 unixstamp date -d \"14:30:00 2023-04-06\" +%s # unixstamp 转时间 date -d @1680849670 ","date":"2023-04-07","objectID":"/posts/linux-date-basic/:3:2","tags":["bash"],"title":"linux date basic","uri":"/posts/linux-date-basic/"},{"categories":null,"content":"关于本站 个人网站，欢迎交流。 ","date":"2023-03-16","objectID":"/about/:1:0","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"关于作者 ","date":"2023-03-16","objectID":"/about/:2:0","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"关于版权 本站所有的原创文章均受 CC BY-NC 4.0 保护，转载请注明来源。 ","date":"2023-03-16","objectID":"/about/:3:0","tags":null,"title":"","uri":"/about/"}]